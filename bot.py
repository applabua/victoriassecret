import logging
from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardRemove,
)
from telegram.ext import (
    Updater,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    Filters,
    ConversationHandler,
    CallbackContext,
)
import os

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# ------------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ -------------------------
TOKEN = "7633660729:AAEF7FnE9HO0jfBsJXHRTOznP0s3jiwntPs"   # –ù–∞–ø—Ä–∏–º–µ—Ä: "123456789:ABC..."
OWNER_ID = 2045410830        # –í–∞—à Telegram ID (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
CHANNEL_ID = "@–≤–∞—à_–∫–∞–Ω–∞–ª"   # –ù–∞–ø—Ä–∏–º–µ—Ä: "@my_channel" –∏–ª–∏ —á–∏—Å–ª–æ–≤–æ–π ID
# -------------------------------------------------------------

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
(
    CHOOSING_PRODUCT,    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–æ–≤–∞—Ä (—á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏)
    WAITING_PHONE_NAME,  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∏–º—è
    WAITING_CITY_REGION, # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç –∏ –æ–±–ª–∞—Å—Ç—å
    WAITING_POST_OFFICE, # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–æ–º–µ—Ä –æ—Ç–¥–µ–ª–µ–Ω–∏—è –ø–æ—á—Ç—ã
    CONFIRM_ORDER        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∏–ª–∏ –æ—Ç–º–µ–Ω—è–µ—Ç –∑–∞–∫–∞–∑
) = range(5)

# –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–ø—Ä–∏–º–µ—Ä: 24 –ø–æ–∑–∏—Ü–∏–∏)
products = {
    "1": {
        "name": "–ó–≤–æ–ª–æ–∂—É—é—á–∏–π –∫—Ä–µ–º Bombshell üíñ",
        "description": (
            "üíß **Bombshell** ‚Äì –∫—Ä–µ–º, —â–æ –¥–∞—Ä—É—î –≥–ª–∏–±–æ–∫–µ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è, "
            "–Ω—ñ–∂–Ω—É —Ç–µ–∫—Å—Ç—É—Ä—É —Ç–∞ –Ω–µ–ø–æ–≤—Ç–æ—Ä–Ω–∏–π –∞—Ä–æ–º–∞—Ç –¥–ª—è –≤–∞—à–æ—ó —à–∫—ñ—Ä–∏!"
        ),
        "image": "https://i.ibb.co/9k8BmxSN/photo-2025-04-15-16-46-14.jpg"
    },
    "2": {
        "name": "–ù—ñ–∂–Ω–∏–π –ª–æ—Å—å–π–æ–Ω Tease üå∏",
        "description": (
            "üå∫ **Tease** ‚Äì –ª–µ–≥–∫–∏–π –ª–æ—Å—å–π–æ–Ω –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –¥–æ–≥–ª—è–¥—É, "
            "—â–æ –∑–∞–±–µ–∑–ø–µ—á—É—î —Å–≤—ñ–∂—ñ—Å—Ç—å —Ç–∞ –º‚Äô—è–∫—ñ—Å—Ç—å —à–∫—ñ—Ä–∏!"
        ),
        "image": "https://i.ibb.co/5X6nDCq4/photo-2025-04-15-16-46-15.jpg"
    },
    "3": {
        "name": "–®–æ–≤–∫–æ–≤–∏–π –∫—Ä–µ–º Seduction ‚ú®",
        "description": (
            "üåπ **Seduction** ‚Äì –∫—Ä–µ–º —ñ–∑ –Ω–∞—Å–∏—á–µ–Ω–æ—é —Ç–µ–∫—Å—Ç—É—Ä–æ—é, "
            "—â–æ –¥–∞—Ä—É—î —à–æ–≤–∫–æ–≤—É –≥–ª–∞–¥–∫—ñ—Å—Ç—å —Ç–∞ —á–∞—Ä—É—é—á–∏–π –∞—Ä–æ–º–∞—Ç!"
        ),
        "image": "https://i.ibb.co/qYHnDZrx/photo-2025-04-15-16-46-13.jpg"
    },
    "4": {
        "name": "–ú—ñ—Å—Ç–∏—á–Ω–∏–π –∫—Ä–µ–º Dreamy Glow üíé",
        "description": (
            "üåü **Dreamy Glow** ‚Äì –∫—Ä–µ–º, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Å—è–π–≤–∞ —Ç–∞ "
            "—Ä—ñ–≤–Ω–æ–º—ñ—Ä–Ω–æ–≥–æ –≤—ñ–¥—Ç—ñ–Ω–∫—É —à–∫—ñ—Ä–∏, –ø—ñ–¥–∫—Ä–µ—Å–ª—é—é—á–∏ –≤–∞—à—É –∫—Ä–∞—Å—É!"
        ),
        "image": "https://i.ibb.co/r2wmHsqT/photo-2025-04-15-15-08-33.jpg"
    },
    # –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–æ–≤–∞—Ä—ã –¥–æ 24 (–∏–ª–∏ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ)
    # ...
}

# -------------------------------------------------------------
#                   –®–∞–≥–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ (Conversation)
# -------------------------------------------------------------

def start(update: Update, context: CallbackContext) -> int:
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ ConversationHandler.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (inline-–∫–Ω–æ–ø–∫–∏).
    """
    chat_id = update.effective_chat.id
    welcome_text = (
        "üåü –í—ñ—Ç–∞—î–º–æ —É —Å–≤—ñ—Ç—ñ —Ä–æ–∑–∫–æ—à—ñ —Ç–∞ –∫—Ä–∞—Å–∏ Victoria's Secret! üåü\n\n"
        "–¢—É—Ç –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –ø–∞—Ä—Ñ—É–º–æ–≤–∞–Ω—ñ –ª–æ—Å—å–π–æ–Ω–∏ —Ç–∞ –∫—Ä–µ–º–∏ –∑ –°–®–ê, "
        "—è–∫—ñ –¥–∞—Ä—É—é—Ç—å –Ω–µ–ø–æ–≤—Ç–æ—Ä–Ω—ñ –≤—ñ–¥—á—É—Ç—Ç—è —Ç–∞ –¥–æ–≥–ª—è–¥ –∑–∞ —à–∫—ñ—Ä–æ—é.\n"
        "–û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä, —è–∫–∏–π –≤–∞–º –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ! üíñ"
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ (3 –≤ —Ä—è–¥)
    buttons = []
    row = []
    for idx, prod_id in enumerate(products.keys(), start=1):
        product_title = products[prod_id]["name"]
        btn = InlineKeyboardButton(
            text=product_title, 
            callback_data=f"PRODUCT_{prod_id}"
        )
        row.append(btn)
        if idx % 3 == 0:
            buttons.append(row)
            row = []
    if row:
        buttons.append(row)

    reply_markup = InlineKeyboardMarkup(buttons)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é-–∫–∞—Ä—Ç–∏–Ω–∫—É + —Ç–µ–∫—Å—Ç + –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    welcome_image = "https://i.ibb.co/cS9WCwrJ/photo-2025-04-14-01-23-29.jpg"
    context.bot.send_photo(
        chat_id=chat_id, 
        photo=welcome_image, 
        caption=welcome_text,
        reply_markup=reply_markup
    )
    return CHOOSING_PRODUCT


def select_product(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ —á–µ—Ä–µ–∑ inline-–∫–Ω–æ–ø–∫—É –≤–∏–¥–∞: PRODUCT_{id}.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–º–æ–≤–∏—Ç–∏¬ª.
    """
    query = update.callback_query
    query.answer()

    data = query.data
    if data.startswith("PRODUCT_"):
        prod_id = data.split("_")[1]
        if prod_id not in products:
            query.edit_message_text("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            return CHOOSING_PRODUCT

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ user_data
        context.user_data["selected_product_id"] = prod_id

        product = products[prod_id]
        caption_text = (
            f"üõç **{product['name']}**\n\n"
            f"{product['description']}\n\n"
            "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ó–∞–º–æ–≤–∏—Ç–∏ üõç¬ª, —â–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!"
        )

        # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∫–Ω–æ–ø–∫—É ¬´–ó–∞–º–æ–≤–∏—Ç–∏¬ª
        keyboard = [
            [
                InlineKeyboardButton("–ó–∞–º–æ–≤–∏—Ç–∏ üõç", callback_data=f"ORDER_{prod_id}")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ª–∏–±–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ) —Å —Ñ–æ—Ç–æ
        chat_id = query.message.chat_id
        # –£–¥–æ–±–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∞ —Å—Ç–∞—Ä–æ–µ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å
        context.bot.send_photo(
            chat_id=chat_id,
            photo=product["image"],
            caption=caption_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )

        return CHOOSING_PRODUCT
    else:
        query.edit_message_text("–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è.")
        return CHOOSING_PRODUCT


def order_product(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è ¬´–ó–∞–º–æ–≤–∏—Ç–∏ üõç¬ª -> –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∏–º–µ–Ω–∏.
    """
    query = update.callback_query
    query.answer()
    
    data = query.data
    if data.startswith("ORDER_"):
        prod_id = data.split("_")[1]
        # –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–∏–ª —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –≤—ã–±—Ä–∞–ª –¥—Ä—É–≥–æ–π —Ç–æ–≤–∞—Ä
        context.user_data["selected_product_id"] = prod_id

        # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏)
        try:
            query.edit_message_reply_markup(reply_markup=None)
        except Exception:
            pass

        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∏–º—è
        text_request = (
            "üì± –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à **–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É** —Ç–∞ **—ñ–º'—è** —É –æ–¥–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ.\n\n"
            "_–ù–∞–ø—Ä–∏–∫–ª–∞–¥:_ `+380 99 123 45 67, –û–ª–µ–Ω–∞`"
        )
        context.bot.send_message(
            chat_id=query.message.chat_id,
            text=text_request,
            parse_mode="Markdown"
        )
        return WAITING_PHONE_NAME
    else:
        query.edit_message_text("–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è.")
        return CHOOSING_PRODUCT


def get_phone_name(update: Update, context: CallbackContext) -> int:
    """
    –ü–æ–ª—É—á–∞–µ–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∏–º—è.
    """
    user_input = update.message.text.strip()
    context.user_data["phone_name"] = user_input  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ user_data

    # –¢–µ–ø–µ—Ä—å —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥/–æ–±–ª–∞—Å—Ç—å
    text_request = (
        "üìç –í–∫–∞–∂—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, **–Ω–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç** —Ç–∞ **–æ–±–ª–∞—Å—Ç—å**.\n\n"
        "_–ù–∞–ø—Ä–∏–∫–ª–∞–¥:_ `–ö–∏—ó–≤, –ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å`"
    )
    update.message.reply_text(text_request, parse_mode="Markdown")
    return WAITING_CITY_REGION


def get_city_region(update: Update, context: CallbackContext) -> int:
    """
    –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç –∏ –æ–±–ª–∞—Å—Ç—å.
    """
    user_input = update.message.text.strip()
    context.user_data["city_region"] = user_input

    # –ü—Ä–æ—Å–∏–º –Ω–æ–º–µ—Ä –æ—Ç–¥–µ–ª–µ–Ω–∏—è –ù–ü –∏–ª–∏ –£–∫—Ä–ü–æ—à—Ç—ã
    text_request = (
        "üè§ –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–æ–º–µ—Ä –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è **–ù–æ–≤–æ—ó –ü–æ—à—Ç–∏** –∞–±–æ **–£–∫—Ä–ø–æ—à—Ç–∏**.\n\n"
        "_–ù–∞–ø—Ä–∏–∫–ª–∞–¥:_ `–ù–æ–≤–∞ –ü–æ—à—Ç–∞, –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ42`"
    )
    update.message.reply_text(text_request, parse_mode="Markdown")
    return WAITING_POST_OFFICE


def get_post_office(update: Update, context: CallbackContext) -> int:
    """
    –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –æ—Ç–¥–µ–ª–µ–Ω–∏—è –ø–æ—á—Ç—ã (–ù–æ–≤–∞—è –ü–æ—á—Ç–∞ –∏–ª–∏ –£–∫—Ä–ü–æ—à—Ç–∞).
    –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.
    """
    user_input = update.message.text.strip()
    context.user_data["post_office"] = user_input

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞
    prod_id = context.user_data.get("selected_product_id")
    product = products.get(prod_id)
    if not product:
        update.message.reply_text("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –∑ –ø—Ä–æ–¥—É–∫—Ç–æ–º. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.")
        return ConversationHandler.END

    phone_name = context.user_data.get("phone_name", "")
    city_region = context.user_data.get("city_region", "")
    post_off = context.user_data.get("post_office", "")

    summary_text = (
        f"üõç **{product['name']}**\n\n"
        f"{product['description']}\n\n"
        "**–í–∞—à—ñ –¥–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è:**\n"
        f"‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω —ñ —ñ–º'—è: {phone_name}\n"
        f"‚Ä¢ –ú—ñ—Å—Ç–æ, –æ–±–ª–∞—Å—Ç—å: {city_region}\n"
        f"‚Ä¢ –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è: {post_off}\n\n"
        "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—ñ –¥–∞–Ω—ñ. –Ø–∫—â–æ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äì –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ¬ª. "
        "–Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå¬ª."
    )

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ inline-–∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã
    keyboard = [
        [
            InlineKeyboardButton("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ", callback_data="CONFIRM_ORDER"),
            InlineKeyboardButton("–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå", callback_data="CANCEL_ORDER")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_photo(
        photo=product["image"],
        caption=summary_text,
        parse_mode="Markdown",
        reply_markup=reply_markup
    )

    return CONFIRM_ORDER


def confirm_order(update: Update, context: CallbackContext) -> int:
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª ¬´–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ¬ª.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –≤—ã–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ.
    """
    query = update.callback_query
    query.answer()

    user_data = context.user_data
    prod_id = user_data.get("selected_product_id")
    product = products.get(prod_id, {})
    phone_name = user_data.get("phone_name", "")
    city_region = user_data.get("city_region", "")
    post_office = user_data.get("post_office", "")

    user = update.effective_user
    full_name = user.full_name
    username = f"@{user.username}" if user.username else ""

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É –≤—Å–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ
    order_msg = (
        "üõí **–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!**\n\n"
        f"**–¢–æ–≤–∞—Ä:** {product.get('name', '‚Äî')}\n"
        f"**–¢–µ–ª–µ—Ñ–æ–Ω —ñ —ñ–º'—è –ø–æ–∫—É–ø—Ü—è:** {phone_name}\n"
        f"**–ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç, –æ–±–ª–∞—Å—Ç—å:** {city_region}\n"
        f"**–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è:** {post_office}\n\n"
        f"**–ü–æ–∫—É–ø–µ—Ü—å:** {full_name} {username}\n"
        f"ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user.id}\n"
    )
    try:
        context.bot.send_message(
            chat_id=OWNER_ID,
            text=order_msg,
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")

    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        query.edit_message_caption(
            caption="‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –æ–±—Ä–æ–±—Ü—ñ. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –¥–∑–≤—ñ–Ω–æ–∫ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.",
            parse_mode="Markdown",
            reply_markup=None
        )
    except Exception:
        # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ—à–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑-–∑–∞ —Ñ–æ—Ç–æ), –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        context.bot.send_message(
            chat_id=query.message.chat_id,
            text="‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –æ–±—Ä–æ–±—Ü—ñ. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –¥–∑–≤—ñ–Ω–æ–∫ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º."
        )

    # –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä
    user_data.clear()
    return ConversationHandler.END


def cancel_order(update: Update, context: CallbackContext) -> int:
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª ¬´–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå¬ª –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.
    """
    query = update.callback_query
    query.answer()
    try:
        query.edit_message_caption(
            caption="‚ùå –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.",
            reply_markup=None
        )
    except Exception:
        context.bot.send_message(
            chat_id=query.message.chat_id,
            text="‚ùå –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ."
        )

    context.user_data.clear()
    return ConversationHandler.END


def cancel_command(update: Update, context: CallbackContext) -> int:
    """
    –§–æ–ª–±–µ–∫ –¥–ª—è /cancel ‚Äì –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å.
    """
    update.message.reply_text("‚ùå –í–∏ —Å–∫–∞—Å—É–≤–∞–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.", reply_markup=ReplyKeyboardRemove())
    context.user_data.clear()
    return ConversationHandler.END


# -------------------------------------------------------------
#                   –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
# -------------------------------------------------------------

def admin_help(update: Update, context: CallbackContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥–∞–º.
    """
    user = update.effective_user
    if user.id != OWNER_ID:
        update.message.reply_text("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤.")
        return
    text = (
        "–ê–¥–º—ñ–Ω-–∫–æ–º–∞–Ω–¥–∏:\n"
        "/help ‚Äì –ø–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –º–µ–Ω—é.\n"
        "/send_to_channel <—Ç–µ–∫—Å—Ç> ‚Äì –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª.\n"
        "/cancel ‚Äì —Å–∫–∞—Å—É–≤–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π –¥—ñ–∞–ª–æ–≥ (–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á).\n"
    )
    update.message.reply_text(text)

def send_to_channel(update: Update, context: CallbackContext):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–æ–π.
    """
    user = update.effective_user
    if user.id != OWNER_ID:
        update.message.reply_text("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤.")
        return

    if not context.args:
        update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏ /send_to_channel")
        return

    message_text = " ".join(context.args)
    button = InlineKeyboardButton("–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è ‚û°Ô∏è", url="https://t.me/YOUR_BOT_USERNAME")
    markup = InlineKeyboardMarkup([[button]])
    try:
        context.bot.send_message(
            chat_id=CHANNEL_ID, 
            text=message_text,
            reply_markup=markup
        )
        update.message.reply_text("üì¢ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–µ –≤ –∫–∞–Ω–∞–ª!")
    except Exception as e:
        logger.error(e)
        update.message.reply_text("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª.")


# -------------------------------------------------------------
#                       –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# -------------------------------------------------------------

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # ConversationHandler –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            CHOOSING_PRODUCT: [
                CallbackQueryHandler(select_product, pattern=r"^PRODUCT_\d+$"),
                CallbackQueryHandler(order_product, pattern=r"^ORDER_\d+$"),
            ],
            WAITING_PHONE_NAME: [
                MessageHandler(Filters.text & ~Filters.command, get_phone_name)
            ],
            WAITING_CITY_REGION: [
                MessageHandler(Filters.text & ~Filters.command, get_city_region)
            ],
            WAITING_POST_OFFICE: [
                MessageHandler(Filters.text & ~Filters.command, get_post_office)
            ],
            CONFIRM_ORDER: [
                CallbackQueryHandler(confirm_order, pattern="^CONFIRM_ORDER$"),
                CallbackQueryHandler(cancel_order, pattern="^CANCEL_ORDER$")
            ],
        },
        fallbacks=[
            CommandHandler("cancel", cancel_command)
        ],
        allow_reentry=True
    )
    dp.add_handler(conv_handler)

    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
    dp.add_handler(CommandHandler("help", admin_help))
    dp.add_handler(CommandHandler("send_to_channel", send_to_channel, pass_args=True))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    updater.start_polling()
    logger.info("Bot started successfully!")
    updater.idle()


if __name__ == "__main__":
    main()
