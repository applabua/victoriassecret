import logging
from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardRemove,
)
from telegram.ext import (
    Updater,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    Filters,
    ConversationHandler,
    CallbackContext,
)
import os

# ------------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è -------------------------
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# ------------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ -------------------------
TOKEN = "7633660729:AAEF7FnE9HO0jfBsJXHRTOznP0s3jiwntPs"
OWNER_ID = 2045410830
CHANNEL_ID = "@your_channel"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π ID –∏–ª–∏ @username –∫–∞–Ω–∞–ª–∞
# ---------------------------------------------------------------

# –°—Ç–∞–¥–∏–∏ –¥–∏–∞–ª–æ–≥–∞:
# CHOOSING_PRODUCT ‚Äì –≤—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞ –∏–∑ –º–µ–Ω—é;
# WAITING_PHONE_NAME ‚Äì –≤–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∏–º–µ–Ω–∏;
# WAITING_ADDRESS ‚Äì –≤–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏;
# CONFIRM_ORDER ‚Äì —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.
CHOOSING_PRODUCT, WAITING_PHONE_NAME, WAITING_ADDRESS, CONFIRM_ORDER = range(4)

# –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –∞—Ä–æ–º–∞—Ç–æ–≤ (22 —Ç–æ–≤–∞—Ä–∞)
# (–ù–æ–º–µ—Ä–∞ –∑–∞–ø–∏—Å–∞–Ω—ã –æ–±—ã—á–Ω—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏, –∞ –æ–ø–∏—Å–∞–Ω–∏—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∑—è—Ç—ã –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ HTML-–∫–æ–¥–∞)
products = {
    "1": {
        "name": "1. Ginger Apple Jewel üçèüåø‚ú®",
        "description": (
            "–°–≤—ñ–∂–∏–π –∞—Ä–æ–º–∞—Ç, –¥–µ —è—Å–∫—Ä–∞–≤–µ —è–±–ª—É–∫–æ –ø–æ—î–¥–Ω—É—î—Ç—å—Å—è —Å –ø—Ä—è–Ω–∏–º —ñ–º–±–∏—Ä–æ–º, —Å—Ç–≤–æ—Ä—é—é—á–∏ –µ–Ω–µ—Ä–≥—ñ–π–Ω–∏–π —Ç–∞ –æ—Å–≤—ñ–∂–∞—é—á–∏–π –±—É–∫–µ—Ç.\n"
            "üîπ –ù–æ—Ç–∏: –∑–µ–ª–µ–Ω–µ —è–±–ª—É–∫–æ, —ñ–º–±–∏—Ä, –∂—É—Ä–∞–≤–ª–∏–Ω–∞"
        ),
        "image": "https://i.ibb.co/9k8BmxSN/photo-2025-04-15-16-46-14.jpg"
    },
    "2": {
        "name": "2. Pure Seduction Bliss üçëüå∏üí´",
        "description": (
            "–°–æ–ª–æ–¥–∫–∏–π –∞—Ä–æ–º–∞—Ç, —â–æ –ø–æ—î–¥–Ω—É—î —Å–æ–∫–æ–≤–∏—Ç–∏–π –ø–µ—Ä—Å–∏–∫ –∑ –Ω—ñ–∂–Ω–∏–º–∏ –ø–µ–ª—é—Å—Ç–∫–∞–º–∏ –∂–∞—Å–º–∏–Ω—É, —Å—Ç–≤–æ—Ä—é—é—á–∏ —á–∞—Ä—ñ–≤–Ω–∏–π —Ç–∞ –ø—Ä–∏–≤–∞–±–ª–∏–≤–∏–π —à–ª–µ–π—Ñ.\n"
            "üîπ –ù–æ—Ç–∏: –ø–µ—Ä—Å–∏–∫, –∂–∞—Å–º–∏–Ω"
        ),
        "image": "https://i.ibb.co/sdDmQmqN/photo-2025-04-15-15-08-20-2.jpg"
    },
    "3": {
        "name": "3. Toasted Amber üî•üå∏üß°",
        "description": (
            "–¢–µ–ø–ª–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ —Ä–æ–∂–µ–≤–æ–≥–æ –ø–µ—Ä—Ü—é —Ç–∞ –±—É—Ä—à—Ç–∏–Ω—É, —â–æ –æ–≥–æ—Ä—Ç–∞—î –º‚Äô—è–∫–∏–º —Ç–∞ —á—É—Ç—Ç—î–≤–∏–º —à–ª–µ–π—Ñ–æ–º.\n"
            "üîπ –ù–æ—Ç–∏: —Ä–æ–∂–µ–≤–∏–π –ø–µ—Ä–µ—Ü—å, –±—É—Ä—à—Ç–∏–Ω"
        ),
        "image": "https://i.ibb.co/r2wmHsqT/photo-2025-04-15-15-08-33.jpg"
    },
    "4": {
        "name": "4. Love Spell Daydream üçáüå∏‚òÅÔ∏è",
        "description": (
            "–ì—Ä–∞–π–ª–∏–≤–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ —è–≥—ñ–¥ —Ç–∞ –∂–∞—Å–º–∏–Ω—É, —â–æ —Å—Ç–≤–æ—Ä—é—î –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –º—Ä—ñ–π–ª–∏–≤–æ—Å—Ç—ñ —Ç–∞ –Ω—ñ–∂–Ω–æ—Å—Ç—ñ.\n"
            "üîπ –ù–æ—Ç–∏: —è–≥–æ–¥–∏, –∂–∞—Å–º–∏–Ω, –º—É—Å–∫—É—Å"
        ),
        "image": "https://i.ibb.co/1Y98rzQ6/photo-2025-04-15-15-08-27.jpg"
    },
    "5": {
        "name": "5. Pomegranate Rose üåπüç∑üåø",
        "description": (
            "–ï–ª–µ–≥–∞–Ω—Ç–Ω–∏–π –∞—Ä–æ–º–∞—Ç, –¥–µ –ø–µ–ª—é—Å—Ç–∫–∏ —Ç—Ä–æ—è–Ω–¥–∏ –ø–æ—î–¥–Ω—É—é—Ç—å—Å—è –∑ —Å–æ–∫–æ–≤–∏—Ç–∏–º –≥—Ä–∞–Ω–∞—Ç–æ–º —Ç–∞ –¥–µ—Ä–µ–≤–Ω–∏–º–∏ –Ω–æ—Ç–∞–º–∏, —Å—Ç–≤–æ—Ä—é—é—á–∏ –≤–∏—Ç–æ–Ω—á–µ–Ω—É –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é.\n"
            "üîπ –ù–æ—Ç–∏: —Ç—Ä–æ—è–Ω–¥–∞, –≥—Ä–∞–Ω–∞—Ç, –¥–µ—Ä–µ–≤–Ω—ñ –∞–∫–æ—Ä–¥–∏"
        ),
        "image": "https://i.ibb.co/p6rpLtys/photo-2025-04-15-15-08-22-2.jpg"
    },
    "6": {
        "name": "6. Citrus Lily üçãüå∏üåû",
        "description": (
            "–°–≤—ñ–∂–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ —Ü–∏—Ç—Ä—É—Å—É —Ç–∞ –ª—ñ–ª—ñ—ó, —â–æ –¥–∞—Ä—É—î –≤—ñ–¥—á—É—Ç—Ç—è —á–∏—Å—Ç–æ—Ç–∏ —Ç–∞ –µ–Ω–µ—Ä–≥—ñ—ó.\n"
            "üîπ –ù–æ—Ç–∏: —Ü–∏—Ç—Ä—É—Å, –ª—ñ–ª—ñ—è, –∂–∞—Å–º–∏–Ω"
        ),
        "image": "https://i.ibb.co/wZKsPN71/photo-2025-04-15-15-08-22.jpg"
    },
    "7": {
        "name": "7. Bare Vanilla Bliss üç¶üå∫üå¨Ô∏è",
        "description": (
            "–ù—ñ–∂–Ω–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ –≤–∞–Ω—ñ–ª—ñ —Ç–∞ —Ñ—ñ–∞–ª–∫–∏, —â–æ —Å—Ç–≤–æ—Ä—é—î –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∑–∞—Ç–∏—à–∫—É —Ç–∞ —Ç–µ–ø–ª–∞.\n"
            "üîπ –ù–æ—Ç–∏: –≤–∞–Ω—ñ–ª—å, —Ñ—ñ–∞–ª–∫–∞"
        ),
        "image": "https://i.ibb.co/HL97djJX/photo-2025-04-15-15-08-21-2.jpg"
    },
    "8": {
        "name": "8. Love Spell Bliss üå∏üçëüåº",
        "description": (
            "–õ–µ–≥–∫–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ –∂–∏–º–æ–ª–æ—Å—Ç—ñ —Ç–∞ –±–∞–≤–æ–≤–Ω–∏, —â–æ –¥–∞—Ä—É—î –≤—ñ–¥—á—É—Ç—Ç—è —Å–≤—ñ–∂–æ—Å—Ç—ñ —Ç–∞ –Ω—ñ–∂–Ω–æ—Å—Ç—ñ.\n"
            "üîπ –ù–æ—Ç–∏: –∂–∏–º–æ–ª–æ—Å—Ç—å, –±–∞–≤–æ–≤–Ω–∞"
        ),
        "image": "https://i.ibb.co/bRdsf7wN/photo-2025-04-15-15-08-21.jpg"
    },
    "9": {
        "name": "9. Velvet Petals Bliss üå∑üç¨üíñ",
        "description": (
            "–°–æ–ª–æ–¥–∫–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ —Ñ—Ä–µ–∑—ñ—ó —Ç–∞ –ª—ñ–ª—ñ—ó, —â–æ —Å—Ç–≤–æ—Ä—é—î –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –Ω—ñ–∂–Ω–æ—Å—Ç—ñ —Ç–∞ —Ä–æ–º–∞–Ω—Ç–∏–∫–∏.\n"
            "üîπ –ù–æ—Ç–∏: —Ñ—Ä–µ–∑—ñ—è, –ª—ñ–ª—ñ—è"
        ),
        "image": "https://i.ibb.co/KcNhVvK4/photo-2025-04-15-15-08-20.jpg"
    },
    "10": {
        "name": "10. Coconut Passion Bliss ü••üå∫üçã",
        "description": (
            "–¢—Ä–æ–ø—ñ—á–Ω–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ –∫–æ–∫–æ—Å—É, –≤–æ–¥—è–Ω–æ—ó –ª—ñ–ª—ñ—ó —Ç–∞ –ª–∏–º–æ–Ω–Ω–æ–≥–æ —Ü–≤—ñ—Ç—É, —â–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —É —Å–≤—ñ—Ç –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É —Ç–∞ —Ä–µ–ª–∞–∫—Å—É.\n"
            "üîπ –ù–æ—Ç–∏: –∫–æ–∫–æ—Å, –≤–æ–¥—è–Ω–∞ –ª—ñ–ª—ñ—è, –ª–∏–º–æ–Ω–Ω–∏–π —Ü–≤—ñ—Ç"
        ),
        "image": "https://i.ibb.co/Mx9J3CYN/photo-2025-04-15-15-08-19.jpg"
    },
    "11": {
        "name": "11. Bare Vanilla Daydream üç¶üå≥üå´Ô∏è",
        "description": (
            "–ú'—è–∫–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ –≤–∞–Ω—ñ–ª—ñ —Ç–∞ —Å–∞–Ω–¥–∞–ª—É, —â–æ —Å—Ç–≤–æ—Ä—é—î –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —Å–ø–æ–∫–æ—é —Ç–∞ –≥–∞—Ä–º–æ–Ω—ñ—ó.\n"
            "üîπ –ù–æ—Ç–∏: –≤–∞–Ω—ñ–ª—å, —Å–∞–Ω–¥–∞–ª"
        ),
        "image": "https://i.ibb.co/r2J0CXgm/photo-2025-04-15-15-08-18-2.jpg"
    },
    "12": {
        "name": "12. Pure Seduction Daydream üç≠üå∏‚òÅÔ∏è",
        "description": (
            "–°–æ–ª–æ–¥–∫–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ –≤–µ—Ä—à–∫–æ–≤–æ–≥–æ —Ü—É–∫—Ä—É —Ç–∞ –∑–∞–º—à—ñ, —â–æ –¥–∞—Ä—É—î –≤—ñ–¥—á—É—Ç—Ç—è –Ω—ñ–∂–Ω–æ—Å—Ç—ñ —Ç–∞ –∫–æ–º—Ñ–æ—Ä—Ç—É.\n"
            "üîπ –ù–æ—Ç–∏: –≤–µ—Ä—à–∫–æ–≤–∏–π —Ü—É–∫–æ—Ä, –±—ñ–ª–∞ –∑–∞–º—à–∞"
        ),
        "image": "https://i.ibb.co/cXtXDGWC/photo-2025-04-15-15-08-18.jpg"
    },
    "13": {
        "name": "13. Velvet Petals Daydream üå∏üçÆ‚òï",
        "description": (
            "–ö–≤—ñ—Ç–∫–æ–≤–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ –∫—Ä–µ–º—É —Ç–∞ –∫–∞–≤–∏, —â–æ —Å—Ç–≤–æ—Ä—é—î –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∑–∞—Ç–∏—à–∫—É —Ç–∞ —Ç–µ–ø–ª–∞.\n"
            "üîπ –ù–æ—Ç–∏: –∫–≤—ñ—Ç–∏, –∫—Ä–µ–º, –∫–∞–≤–∞"
        ),
        "image": "https://i.ibb.co/b4y9SHy/photo-2025-04-15-15-08-17.jpg"
    },
    "14": {
        "name": "14. Coconut Passion ü••üî•üå¥",
        "description": (
            "–°–æ–ª–æ–¥–∫–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ –∫–æ–∫–æ—Å—É —Ç–∞ –≤–∞–Ω—ñ–ª—ñ, —â–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —É —Ç—Ä–æ–ø—ñ—á–Ω–∏–π —Ä–∞–π.\n"
            "üîπ –ù–æ—Ç–∏: –∫–æ–∫–æ—Å, –≤–∞–Ω—ñ–ª—å, –ª—ñ–ª—ñ—è"
        ),
        "image": "https://i.ibb.co/KcGGjcHs/photo-2025-04-15-15-12-19-2.jpg"
    },
    "15": {
        "name": "15. Amber Romance üçíüçÆüå≥",
        "description": (
            "–¢–µ–ø–ª–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ —á–µ—Ä–µ—à–Ω—ñ, –≤–∞–Ω—ñ–ª—ñ —Ç–∞ —Å–∞–Ω–¥–∞–ª—É, —â–æ —Å—Ç–≤–æ—Ä—é—î –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —Ä–æ–º–∞–Ω—Ç–∏–∫–∏ —Ç–∞ –∑–∞—Ç–∏—à–∫—É.\n"
            "üîπ –ù–æ—Ç–∏: —á–µ—Ä–µ—à–Ω—è, –≤–∞–Ω—ñ–ª—å, —Å–∞–Ω–¥–∞–ª"
        ),
        "image": "https://i.ibb.co/4whM3CBj/photo-2025-04-15-15-12-19.jpg"
    },
    "16": {
        "name": "16. Strawberries & Champagne üçìü•Ç‚ú®",
        "description": (
            "–°–≤—ñ–∂–∏–π –∞—Ä–æ–º–∞—Ç –∑ –Ω–æ—Ç–∞–º–∏ –ø–æ–ª—É–Ω–∏—Ü—ñ —Ç–∞ —à–∞–º–ø–∞–Ω—Å—å–∫–æ–≥–æ, —â–æ —Å—Ç–≤–æ—Ä—é—î —Å–≤—è—Ç–∫–æ–≤–∏–π –Ω–∞—Å—Ç—Ä—ñ–π.\n"
            "üîπ –ù–æ—Ç–∏: –ø–æ–ª—É–Ω–∏—Ü—è, —à–∞–º–ø–∞–Ω—Å—å–∫–µ"
        ),
        "image": "https://i.ibb.co/ccfr76k4/photo-2025-04-15-15-12-18-2.jpg"
    },
    "17": {
        "name": "17. Love Spell üå∏üçëüçí",
        "description": (
            "–°–ø—Ä–∞–≤–∂–Ω—ñ–π –±–µ—Å—Ç—Å–µ–ª–µ—Ä —ñ —Å–∏–º–≤–æ–ª –∂—ñ–Ω–æ—á–Ω–æ—Å—Ç—ñ –≤—ñ–¥ Victoria‚Äôs Secret!\n"
            "üîπ –ù–æ—Ç–∏: –≤–∏—à–Ω–µ–≤–∏–π —Ü–≤—ñ—Ç, —Å—Ç–∏–≥–ª–∏–π –ø–µ—Ä—Å–∏–∫, —Å–æ–ª–æ–¥–∫–∏–π –Ω–µ–∫—Ç–∞—Ä"
        ),
        "image": "https://i.ibb.co/0yJxwb5b/photo-2025-04-15-15-12-18.jpg"
    },
    "18": {
        "name": "18. Pear Glac√© üçêüçàüíß",
        "description": (
            "–°–≤—ñ–∂–∏–π —Ç–∞ —Ñ—Ä—É–∫—Ç–æ–≤–∏–π –∞—Ä–æ–º–∞—Ç, —â–æ –¥–∞—Ä—É—î –ª–µ–≥–∫—ñ—Å—Ç—å —Ç–∞ –≤—ñ–¥—á—É—Ç—Ç—è —á–∏—Å—Ç–æ—Ç–∏.\n"
            "üîπ –ù–æ—Ç–∏: –≥—Ä—É—à–∞, –¥–∏–Ω—è, —Ä–æ—Å–∏"
        ),
        "image": "https://i.ibb.co/qvTCHVV/photo-2025-04-15-15-12-17.jpg"
    },
    "19": {
        "name": "19. Midnight Bloom üååüå∫üí´",
        "description": (
            "–ú–∞–≥–Ω–µ—Ç–∏—á–Ω–∏–π –∞—Ä–æ–º–∞—Ç, —è–∫–∏–π –≤–∞–±–∏—Ç—å –∑ –ø–µ—Ä—à–æ–≥–æ –≤–¥–∏—Ö—É.\n"
            "üîπ –ù–æ—Ç–∏: –Ω—ñ—á–Ω—ñ –∫–≤—ñ—Ç–∏, –ø—É–¥—Ä–æ–≤–∞ –≤–∞–Ω—ñ–ª—å, –ª–µ–≥–∫–∏–π –º—É—Å–∫—É—Å"
        ),
        "image": "https://i.ibb.co/nMb7BfJb/photo-2025-04-15-15-12-16-2.jpg"
    },
    "20": {
        "name": "20. Velvet Petals Bliss üíóüå∑üíñ",
        "description": (
            "–ù—ñ–∂–Ω–∏–π, –≤–∏—Ç–æ–Ω—á–µ–Ω–∏–π –∞—Ä–æ–º–∞—Ç, —è–∫–∏–π –æ–≥–æ—Ä—Ç–∞—î –º–æ–≤ –º‚Äô—è–∫–∏–π —à–∞—Ä—Ñ.\n"
            "üîπ –ù–æ—Ç–∏: —Ñ—Ä–µ–∑—ñ—è, —Å–æ–ª–æ–¥–∫–∏–π –∫—Ä–µ–º"
        ),
        "image": "https://i.ibb.co/b4y9SHy/photo-2025-04-15-15-08-17.jpg"
    },
    "21": {
        "name": "21. Aqua Kiss üåäüåºüçÉ",
        "description": (
            "–§—Ä–µ–∑—ñ—è —Ç–∞ –º–∞—Ä–≥–∞—Ä–∏—Ç–∫–∞ —Å—Ç–≤–æ—Ä—é—é—Ç—å —á–∏—Å—Ç–∏–π, –ª–µ–≥–∫–∏–π –∞—Ä–æ–º–∞—Ç ‚Äî –¥–∏—Ö–∞–Ω–Ω—è –≤–µ—Å–Ω–∏ –Ω–∞ —Ç—ñ–ª—ñ.\n"
            "üîπ –ù–æ—Ç–∏: —Ñ—Ä–µ–∑—ñ—è, –º–∞—Ä–≥–∞—Ä–∏—Ç–∫–∞, –ø—Ä–æ—Ö–æ–ª–æ–¥–∞ –ª–∏—Å—Ç—è"
        ),
        "image": "https://i.ibb.co/bMcQSsLv/photo-2025-04-15-15-12-16.jpg"
    },
    "22": {
        "name": "22. Pure Seduction Classic üíãüçëüå∏",
        "description": (
            "–°–æ–∫–æ–≤–∏—Ç–∞ —Å–ª–∏–≤–∞ —Ç–∞ –∫–≤—ñ—Ç–∫–æ–≤–∞ —Å–≤—ñ–∂—ñ—Å—Ç—å –∑–ª–∏–≤–∞—é—Ç—å—Å—è –≤ —è—Å–∫—Ä–∞–≤–∏–π, —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–∏–π –∞—Ä–æ–º–∞—Ç.\n"
            "üîπ –ù–æ—Ç–∏: —Å—Ç–∏–≥–ª–∞ —Å–ª–∏–≤–∞, –ø–µ–ª—é—Å—Ç–∫–∏ —Ñ—Ä–µ–∑—ñ—ó"
        ),
        "image": "https://i.ibb.co/N2rqMnHr/photo-2025-04-15-15-12-15.jpg"
    },
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ–Ω—é —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π (4 —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É)
def get_product_menu(page: int) -> InlineKeyboardMarkup:
    sorted_products = sorted(products.items(), key=lambda x: int(x[0]))
    per_page = 4
    total_pages = (len(sorted_products) + per_page - 1) // per_page
    start = (page - 1) * per_page
    end = start + per_page
    current_products = sorted_products[start:end]
    keyboard = []
    for prod_id, prod in current_products:
        btn = InlineKeyboardButton(text=prod["name"], callback_data=f"PRODUCT_{prod_id}")
        keyboard.append([btn])
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"PAGE_{page - 1}"))
    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton("–î–∞–ª—ñ ‚ñ∂Ô∏è", callback_data=f"PAGE_{page + 1}"))
    if nav_buttons:
        keyboard.append(nav_buttons)
    return InlineKeyboardMarkup(keyboard)

# ------------------------- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ConversationHandler -------------------------

def start_command(update: Update, context: CallbackContext) -> int:
    chat_id = update.effective_chat.id
    welcome_text = (
        "üåü –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Victoria's Secret! üåü\n\n"
        "–í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–ª—è —Å–µ–±–µ —Ä–æ–∑–∫—ñ—à–Ω–∏–π –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏—Ö –ø–∞—Ä—Ñ—É–º–æ–≤–∞–Ω–∏—Ö –ª–æ—Å—å–π–æ–Ω—ñ–≤ —Ç–∞ –∫—Ä–µ–º—ñ–≤ –∑ –°–®–ê. "
        "–ù–∞—à—ñ –∞—Ä–æ–º–∞—Ç–∏ –ø–æ–¥–∞—Ä—É—é—Ç—å –≤–∞–º –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–µ –≤—ñ–¥—á—É—Ç—Ç—è –∫—Ä–∞—Å–∏ —Ç–∞ –¥–æ–≥–ª—è–¥—É.\n\n"
        "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —ñ–¥–µ–∞–ª—å–Ω–∏–π —Ç–æ–≤–∞—Ä –Ω–∏–∂—á–µ:"
    )
    context.user_data["current_page"] = 1
    welcome_image = "https://i.ibb.co/cS9WCwrJ/photo-2025-04-14-01-23-29.jpg"
    context.bot.send_photo(
        chat_id=chat_id,
        photo=welcome_image,
        caption=welcome_text,
        reply_markup=get_product_menu(1)
    )
    return CHOOSING_PRODUCT

def page_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    data = query.data
    page = int(data.split("_")[1])
    context.user_data["current_page"] = page
    try:
        query.edit_message_reply_markup(reply_markup=get_product_menu(page))
    except Exception:
        query.message.reply_text("–û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä:", reply_markup=get_product_menu(page))
    return CHOOSING_PRODUCT

def back_to_menu_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    page = context.user_data.get("current_page", 1)
    try:
        query.message.delete()
    except Exception:
        pass
    welcome_text = (
        "üåü –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Victoria's Secret! üåü\n\n"
        "–í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–ª—è —Å–µ–±–µ —Ä–æ–∑–∫—ñ—à–Ω–∏–π –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏—Ö –ø–∞—Ä—Ñ—É–º–æ–≤–∞–Ω–∏—Ö –ª–æ—Å—å–π–æ–Ω—ñ–≤ —Ç–∞ –∫—Ä–µ–º—ñ–≤ –∑ –°–®–ê. "
        "–ù–∞—à—ñ –∞—Ä–æ–º–∞—Ç–∏ –ø–æ–¥–∞—Ä—É—é—Ç—å –≤–∞–º –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–µ –≤—ñ–¥—á—É—Ç—Ç—è –∫—Ä–∞—Å–∏ —Ç–∞ –¥–æ–≥–ª—è–¥—É.\n\n"
        "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —ñ–¥–µ–∞–ª—å–Ω–∏–π —Ç–æ–≤–∞—Ä –Ω–∏–∂—á–µ:"
    )
    welcome_image = "https://i.ibb.co/cS9WCwrJ/photo-2025-04-14-01-23-29.jpg"
    context.bot.send_photo(
        chat_id=query.message.chat_id,
        photo=welcome_image,
        caption=welcome_text,
        reply_markup=get_product_menu(page)
    )
    return CHOOSING_PRODUCT

def select_product(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    data = query.data
    if data.startswith("PRODUCT_"):
        prod_id = data.split("_")[1]
        if prod_id not in products:
            query.edit_message_text("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            return CHOOSING_PRODUCT
        context.user_data["selected_product_id"] = prod_id
        product = products[prod_id]
        caption_text = (
            f"üõç **{product['name']}**\n\n"
            f"{product['description']}\n\n"
            "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ó–∞–º–æ–≤–∏—Ç–∏ üõç¬ª, —â–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!"
        )
        keyboard = [[
            InlineKeyboardButton("–ó–∞–º–æ–≤–∏—Ç–∏ üõç", callback_data=f"ORDER_{prod_id}"),
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="BACK_TO_MENU")
        ]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        chat_id = query.message.chat_id
        context.bot.send_photo(
            chat_id=chat_id,
            photo=product["image"],
            caption=caption_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
        return CHOOSING_PRODUCT
    else:
        query.edit_message_text("–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è.")
        return CHOOSING_PRODUCT

def order_product(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    data = query.data
    if data.startswith("ORDER_"):
        prod_id = data.split("_")[1]
        context.user_data["selected_product_id"] = prod_id
        try:
            query.edit_message_reply_markup(reply_markup=None)
        except Exception:
            pass
        phone_request = (
            "üì± –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à **–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É** —Ç–∞ **—ñ–º'—è**.\n\n"
            "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: `+380 99 123 45 67, –û–ª–µ–Ω–∞`"
        )
        context.bot.send_message(
            chat_id=query.message.chat_id,
            text=phone_request,
            parse_mode="Markdown"
        )
        return WAITING_PHONE_NAME
    else:
        query.edit_message_text("–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è.")
        return CHOOSING_PRODUCT

def get_phone_name(update: Update, context: CallbackContext) -> int:
    user_input = update.message.text.strip()
    context.user_data["phone_name"] = user_input
    address_request = (
        "üè§ –í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç, –æ–±–ª–∞—Å—Ç—å, –Ω–æ–º–µ—Ä –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏ –∞–±–æ –£–∫—Ä–ø–æ—à—Ç–∏.\n"
        "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –ö–∏—ó–≤, –ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å, –ù–æ–≤–∞ –ü–æ—à—Ç–∞, –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ42"
    )
    update.message.reply_text(address_request, parse_mode="Markdown")
    return WAITING_ADDRESS

def get_address(update: Update, context: CallbackContext) -> int:
    user_input = update.message.text.strip()
    context.user_data["address"] = user_input
    prod_id = context.user_data.get("selected_product_id")
    product = products.get(prod_id)
    if not product:
        update.message.reply_text("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –∑ –ø—Ä–æ–¥—É–∫—Ç–æ–º. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.")
        return ConversationHandler.END
    phone_name = context.user_data.get("phone_name", "")
    address = context.user_data.get("address", "")
    summary_text = (
        f"üõç **{product['name']}**\n\n"
        f"{product['description']}\n\n"
        "**–í–∞—à—ñ –¥–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è:**\n"
        f"‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω —ñ —ñ–º'—è: {phone_name}\n"
        f"‚Ä¢ –ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {address}\n\n"
        "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—ñ –¥–∞–Ω—ñ. –Ø–∫—â–æ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äì –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ¬ª. "
        "–Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå¬ª."
    )
    keyboard = [[
        InlineKeyboardButton("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ", callback_data="CONFIRM_ORDER"),
        InlineKeyboardButton("–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå", callback_data="CANCEL_ORDER")
    ]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_photo(
        photo=product["image"],
        caption=summary_text,
        parse_mode="Markdown",
        reply_markup=reply_markup
    )
    return CONFIRM_ORDER

def confirm_order(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    user_data = context.user_data
    prod_id = user_data.get("selected_product_id")
    product = products.get(prod_id, {})
    phone_name = user_data.get("phone_name", "")
    address = user_data.get("address", "")
    user = update.effective_user
    full_name = user.full_name
    username = f"@{user.username}" if user.username else ""
    order_msg = (
        f"üõí **–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!**\n\n"
        f"**–¢–æ–≤–∞—Ä:** {product.get('name', '‚Äî')}\n"
        f"**–¢–µ–ª–µ—Ñ–æ–Ω —ñ —ñ–º'—è –ø–æ–∫—É–ø—Ü—è:** {phone_name}\n"
        f"**–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:** {address}\n\n"
        f"**–ü–æ–∫—É–ø–µ—Ü—å:** {full_name} {username}\n"
        f"ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user.id}\n"
    )
    try:
        context.bot.send_photo(
            chat_id=OWNER_ID,
            photo=product.get("image"),
            caption=order_msg,
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")
    try:
        query.edit_message_caption(
            caption="‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –æ–±—Ä–æ–±—Ü—ñ. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –¥–∑–≤—ñ–Ω–æ–∫.",
            parse_mode="Markdown",
            reply_markup=None
        )
    except Exception:
        context.bot.send_message(
            chat_id=query.message.chat_id,
            text="‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –æ–±—Ä–æ–±—Ü—ñ. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –¥–∑–≤—ñ–Ω–æ–∫."
        )
    context.user_data.clear()
    return ConversationHandler.END

def cancel_order(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    try:
        query.edit_message_caption(
            caption="‚ùå –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.",
            reply_markup=None
        )
    except Exception:
        context.bot.send_message(
            chat_id=query.message.chat_id,
            text="‚ùå –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ."
        )
    context.user_data.clear()
    return ConversationHandler.END

def cancel_command(update: Update, context: CallbackContext) -> int:
    update.message.reply_text("‚ùå –í–∏ —Å–∫–∞—Å—É–≤–∞–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.", reply_markup=ReplyKeyboardRemove())
    context.user_data.clear()
    return ConversationHandler.END

# ------------------------- –ê–¥–º—ñ–Ω-–∫–æ–º–∞–Ω–¥—ã -------------------------

def admin_help(update: Update, context: CallbackContext):
    user = update.effective_user
    if user.id != OWNER_ID:
        update.message.reply_text("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤.")
        return
    text = (
        "–ê–¥–º—ñ–Ω-–∫–æ–º–∞–Ω–¥–∏:\n"
        "/help ‚Äì –ø–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –º–µ–Ω—é.\n"
        "/send_to_channel <—Ç–µ–∫—Å—Ç> ‚Äì –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª.\n"
        "/cancel ‚Äì —Å–∫–∞—Å—É–≤–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π –¥—ñ–∞–ª–æ–≥ (–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á).\n"
    )
    update.message.reply_text(text)

def send_to_channel(update: Update, context: CallbackContext):
    user = update.effective_user
    if user.id != OWNER_ID:
        update.message.reply_text("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤.")
        return
    if not context.args:
        update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏ /send_to_channel")
        return
    message_text = " ".join(context.args)
    button = InlineKeyboardButton("–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è ‚û°Ô∏è", url="https://t.me/YOUR_BOT_USERNAME")
    markup = InlineKeyboardMarkup([[button]])
    try:
        context.bot.send_message(chat_id=CHANNEL_ID, text=message_text, reply_markup=markup)
        update.message.reply_text("üì¢ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–µ –≤ –∫–∞–Ω–∞–ª!")
    except Exception as e:
        logger.error(e)
        update.message.reply_text("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª.")

# ------------------------- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ -------------------------

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start_command)],
        states={
            CHOOSING_PRODUCT: [
                CallbackQueryHandler(select_product, pattern=r"^PRODUCT_\d+$"),
                CallbackQueryHandler(order_product, pattern=r"^ORDER_\d+$"),
                CallbackQueryHandler(page_handler, pattern=r"^PAGE_\d+$"),
                CallbackQueryHandler(back_to_menu_handler, pattern="^BACK_TO_MENU$")
            ],
            WAITING_PHONE_NAME: [
                MessageHandler(Filters.text & ~Filters.command, get_phone_name)
            ],
            WAITING_ADDRESS: [
                MessageHandler(Filters.text & ~Filters.command, get_address)
            ],
            CONFIRM_ORDER: [
                CallbackQueryHandler(confirm_order, pattern="^CONFIRM_ORDER$"),
                CallbackQueryHandler(cancel_order, pattern="^CANCEL_ORDER$")
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel_command)],
        allow_reentry=True
    )
    dp.add_handler(conv_handler)
    dp.add_handler(CommandHandler("help", admin_help))
    dp.add_handler(CommandHandler("send_to_channel", send_to_channel, pass_args=True))
    updater.start_polling()
    logger.info("Bot started successfully!")
    updater.idle()

if __name__ == "__main__":
    main()
