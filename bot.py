import logging
from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardRemove,
)
from telegram.ext import (
    Updater,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    Filters,
    ConversationHandler,
    CallbackContext,
)
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# ------------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ -------------------------
TOKEN = "7633660729:AAEF7FnE9HO0jfBsJXHRTOznP0s3jiwntPs"
OWNER_ID = 2045410830
CHANNEL_ID = "@your_channel"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π ID –∏–ª–∏ @username –∫–∞–Ω–∞–ª–∞
# -------------------------------------------------------------

# –°—Ç–∞–¥–∏–∏ –¥–∏–∞–ª–æ–≥–∞:
# CHOOSING_PRODUCT ‚Äì –≤—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞ –∏–∑ –º–µ–Ω—é;
# WAITING_PHONE_NAME ‚Äì –≤–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∏–º–µ–Ω–∏;
# WAITING_ADDRESS ‚Äì –≤–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏;
# CONFIRM_ORDER ‚Äì —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.
CHOOSING_PRODUCT, WAITING_PHONE_NAME, WAITING_ADDRESS, CONFIRM_ORDER = range(4)

# –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ ‚Äì 24 –ø—Ä–æ–¥—É–∫—Ç–∞ —Å –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏.
# –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∏–∑ –ø–æ–ª—è "name" (–Ω–∞–ø—Ä–∏–º–µ—Ä, "1. Bombshell üíñ").
products = {
    "1": {
        "name": "1. Ginger Apple Jewelüíñ",
        "description": "üíß **Ginger Apple Jewel** ‚Äì –∫—Ä–µ–º, —â–æ –¥–∞—Ä—É—î –≥–ª–∏–±–æ–∫–µ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è, –Ω—ñ–∂–Ω—É —Ç–µ–∫—Å—Ç—É—Ä—É —Ç–∞ –Ω–µ–ø–æ–≤—Ç–æ—Ä–Ω–∏–π –∞—Ä–æ–º–∞—Ç –¥–ª—è –≤–∞—à–æ—ó —à–∫—ñ—Ä–∏!",
        "image": "https://i.ibb.co/9k8BmxSN/photo-2025-04-15-16-46-14.jpg"
    },
    "2": {
        "name": "2. Tease üå∏",
        "description": "üå∫ **Tease** ‚Äì –ª–µ–≥–∫–∏–π –ª–æ—Å—å–π–æ–Ω –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –¥–æ–≥–ª—è–¥—É, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—î —Å–≤—ñ–∂—ñ—Å—Ç—å —Ç–∞ –º‚Äô—è–∫—ñ—Å—Ç—å —à–∫—ñ—Ä–∏!",
        "image": "https://i.ibb.co/5X6nDCq4/photo-2025-04-15-16-46-15.jpg"
    },
    "3": {
        "name": "3. Seduction ‚ú®",
        "description": "üåπ **Seduction** ‚Äì –∫—Ä–µ–º —ñ–∑ –Ω–∞—Å–∏—á–µ–Ω–æ—é —Ç–µ–∫—Å—Ç—É—Ä–æ—é, —â–æ –¥–∞—Ä—É—î —à–æ–≤–∫–æ–≤—É –≥–ª–∞–¥–∫—ñ—Å—Ç—å —Ç–∞ —á–∞—Ä—É—é—á–∏–π –∞—Ä–æ–º–∞—Ç!",
        "image": "https://i.ibb.co/qYHnDZrx/photo-2025-04-15-16-46-13.jpg"
    },
    "4": {
        "name": "4. Dreamy Glow üíé",
        "description": "üåü **Dreamy Glow** ‚Äì –∫—Ä–µ–º, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Å—è–π–≤–∞ —Ç–∞ —Ä—ñ–≤–Ω–æ–º—ñ—Ä–Ω–æ–≥–æ –≤—ñ–¥—Ç—ñ–Ω–∫—É —à–∫—ñ—Ä–∏, –ø—ñ–¥–∫—Ä–µ—Å–ª—é—é—á–∏ –≤–∞—à—É –∫—Ä–∞—Å—É!",
        "image": "https://i.ibb.co/r2wmHsqT/photo-2025-04-15-15-08-33.jpg"
    },
    "5": {
        "name": "5. Luscious Body üåü",
        "description": "üíñ **Luscious Body** ‚Äì —ñ–Ω—Ç–µ–Ω—Å–∏–≤–Ω–µ –∂–∏–≤–ª–µ–Ω–Ω—è —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —à–∫—ñ—Ä–∏ –¥–ª—è –≤—ñ–¥—á—É—Ç—Ç—è —Å–ø—Ä–∞–≤–∂–Ω—å–æ—ó —Ä–æ–∑–∫–æ—à—ñ!",
        "image": "https://i.ibb.co/1Y98rzQ6/photo-2025-04-15-15-08-27.jpg"
    },
    "6": {
        "name": "6. Velvet Touch üåº",
        "description": "üíê **Velvet Touch** ‚Äì –Ω—ñ–∂–Ω–∏–π –ª–æ—Å—å–π–æ–Ω, —â–æ –¥–∞—Ä—É—î –º‚Äô—è–∫—ñ—Å—Ç—å —Ç–∞ –∫–æ–º—Ñ–æ—Ä—Ç, –∑–∞–ª–∏—à–∞—é—á–∏ –ø—Ä–∏—î–º–Ω–∏–π –∞—Ä–æ–º–∞—Ç –Ω–∞ —à–∫—ñ—Ä—ñ!",
        "image": "https://i.ibb.co/p6rpLtys/photo-2025-04-15-15-08-22-2.jpg"
    },
    "7": {
        "name": "7. Charm Essence üå∫",
        "description": "üå∑ **Charm Essence** ‚Äì —É—Ç–æ–Ω—á–µ–Ω–∏–π –∫—Ä–µ–º, –Ω–∞–ø–æ–≤–Ω–µ–Ω–∏–π –∂–∏—Ç—Ç—è–º —Ç–∞ –µ–Ω–µ—Ä–≥—ñ—î—é –∑–∞–≤–¥—è–∫–∏ —Å–≤–æ—ó–π –ª–µ–≥–∫—ñ–π —Ç–µ–∫—Å—Ç—É—Ä—ñ —Ç–∞ —Å–≤—ñ–∂–æ–º—É –∞—Ä–æ–º–∞—Ç—É!",
        "image": "https://i.ibb.co/wZKsPN71/photo-2025-04-15-15-08-22.jpg"
    },
    "8": {
        "name": "8. Glamour Radiance üí´",
        "description": "‚ú® **Glamour Radiance** ‚Äì –ª–æ—Å—å–π–æ–Ω, —è–∫–∏–π –¥–∞—Ä—É—î —à–∫—ñ—Ä—ñ —Å—è–π–≤–æ —Ç–∞ —Ä–æ–∑–∫—ñ—à–Ω–∏–π –≤–∏–≥–ª—è–¥, –ø—ñ–¥–∫—Ä–µ—Å–ª—é—é—á–∏ –≤–∞—à—É —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ—Å—Ç—å!",
        "image": "https://i.ibb.co/HL97djJX/photo-2025-04-15-15-08-21-2.jpg"
    },
    "9": {
        "name": "9. Mystic Moisture üíß",
        "description": "üåπ **Mystic Moisture** ‚Äì –∫—Ä–µ–º, —â–æ –¥–∞—Ä—É—î –≥–ª–∏–±–æ–∫–µ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è —Ç–∞ —Ä–æ–±–∏—Ç—å –≤–∞—à—É —à–∫—ñ—Ä—É –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–æ –º‚Äô—è–∫–æ—é —ñ –≥–ª–∞–¥–∫–æ—é!",
        "image": "https://i.ibb.co/bRdsf7wN/photo-2025-04-15-15-08-21.jpg"
    },
    "10": {
        "name": "10. Delightful Dusk üåô",
        "description": "üíñ **Delightful Dusk** ‚Äì –∫—Ä–µ–º –¥–ª—è —ñ–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–≥–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—î –Ω—ñ–∂–Ω–∏–π –¥–æ–≥–ª—è–¥ —ñ –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–∏–π –∞—Ä–æ–º–∞—Ç –¥–ª—è –≤–µ—á–æ—Ä–∞!",
        "image": "https://i.ibb.co/sdDmQmqN/photo-2025-04-15-15-08-20-2.jpg"
    },
    "11": {
        "name": "11. Enchanted Velvet ‚ú®",
        "description": "üíé **Enchanted Velvet** ‚Äì –≤—ñ–¥—á—É–π—Ç–µ –º–∞–≥—ñ—é –¥–æ–≥–ª—è–¥—É –∑ –∫—Ä–µ–º–æ–º, —è–∫–∏–π –¥–∞—Ä—É—î —à–æ–≤–∫–æ–≤–∏—Å—Ç—É –º‚Äô—è–∫—ñ—Å—Ç—å —Ç–∞ —Å—è–π–≤–æ –≤–∞—à—ñ–π —à–∫—ñ—Ä—ñ!",
        "image": "https://i.ibb.co/KcNhVvK4/photo-2025-04-15-15-08-20.jpg"
    },
    "12": {
        "name": "12. Pure Elegance üí´",
        "description": "üå∏ **Pure Elegance** ‚Äì —ñ–¥–µ–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å –º—ñ–∂ –Ω—ñ–∂–Ω—ñ—Å—Ç—é —Ç–∞ –∂–∏–≤–ª–µ–Ω–Ω—è–º, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—î —Å–≤—ñ–∂—ñ—Å—Ç—å —ñ –Ω–µ–ø–æ–≤—Ç–æ—Ä–Ω—É –µ–ª–µ–≥–∞–Ω—Ç–Ω—ñ—Å—Ç—å!",
        "image": "https://i.ibb.co/Mx9J3CYN/photo-2025-04-15-15-08-19.jpg"
    },
    "13": {
        "name": "13. Opulent Glow üåü",
        "description": "üíê **Opulent Glow** ‚Äì –∫—Ä–µ–º, —â–æ –ø—ñ–¥–∫—Ä–µ—Å–ª—é—î –≤–∞—à—É –ø—Ä–∏—Ä–æ–¥–Ω—É –∫—Ä–∞—Å—É, –¥–∞—Ä—É—é—á–∏ –≥–ª–∏–±–æ–∫–µ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è —Ç–∞ –µ—Ñ–µ–∫—Ç–Ω–∏–π –±–ª–∏—Å–∫!",
        "image": "https://i.ibb.co/r2J0CXgm/photo-2025-04-15-15-08-18-2.jpg"
    },
    "14": {
        "name": "14. Divine Nectar üçØ",
        "description": "üåπ **Divine Nectar** ‚Äì —Ä–æ–∑–∫—ñ—à–Ω–∏–π –∫—Ä–µ–º, –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω–∏–π –ø—Ä–∏—Ä–æ–¥–Ω–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –¥–ª—è –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–≥–æ –¥–æ–≥–ª—è–¥—É –∑–∞ —à–∫—ñ—Ä–æ—é!",
        "image": "https://i.ibb.co/cXtXDGWC/photo-2025-04-15-15-08-18.jpg"
    },
    "15": {
        "name": "15. Soft Whisper üå¨",
        "description": "üíñ **Soft Whisper** ‚Äì –ª–µ–≥–∫–∏–π –ª–æ—Å—å–π–æ–Ω, —â–æ –¥–∞—Ä—É—î —Å–≤—ñ–∂—ñ—Å—Ç—å —ñ –¥–µ–ª—ñ–∫–∞—Ç–Ω–∏–π –∞—Ä–æ–º–∞—Ç, —è–∫ —Ç–∏—Ö–∏–π —à–µ–ø—ñ—Ç –≤–µ—Å–Ω–∏!",
        "image": "https://i.ibb.co/b4y9SHy/photo-2025-04-15-15-08-17.jpg"
    },
    "16": {
        "name": "16. Radiant Charm ‚ú®",
        "description": "üåü **Radiant Charm** ‚Äì –∫—Ä–µ–º –¥–ª—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è, —è–∫–∏–π –¥–∞—Ä—É—î –≤–∞—à—ñ–π —à–∫—ñ—Ä—ñ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–µ —Å—è–π–≤–æ —Ç–∞ —á–∞—Ä—ñ–≤–Ω—ñ—Å—Ç—å!",
        "image": "https://i.ibb.co/KcGGjcHs/photo-2025-04-15-15-12-19-2.jpg"
    },
    "17": {
        "name": "17. Secret Allure üíé",
        "description": "üå∫ **Secret Allure** ‚Äì –≤–∏—Ç–æ–Ω—á–µ–Ω–∏–π –∫—Ä–µ–º, —è–∫–∏–π –ø—ñ–¥–∫—Ä–µ—Å–ª—é—î –≤–∞—à—É —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ—Å—Ç—å —Ç–∞ –¥–æ–¥–∞—î –º–∞–≥–Ω–µ—Ç–∏–∑–º—É –∑–æ–≤–Ω—ñ—à–Ω–æ—Å—Ç—ñ!",
        "image": "https://i.ibb.co/4whM3CBj/photo-2025-04-15-15-12-19.jpg"
    },
    "18": {
        "name": "18. Satin Bliss üåº",
        "description": "üå∑ **Satin Bliss** ‚Äì –Ω—ñ–∂–Ω–∏–π –ª–æ—Å—å–π–æ–Ω, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—î –¥–æ–≥–ª—è–Ω—É—Ç–æ—Å—Ç—å —à–∫—ñ—Ä–∏ —ñ –¥–∞—Ä—É—î –≤—ñ–¥—á—É—Ç—Ç—è —à–æ–≤–∫–æ–≤–∏—Å—Ç–æ—ó —Ä–æ–∑–∫–æ—à—ñ!",
        "image": "https://i.ibb.co/ccfr76k4/photo-2025-04-15-15-12-18-2.jpg"
    },
    "19": {
        "name": "19. Celestial üí´",
        "description": "üíê **Celestial** ‚Äì –∫—Ä–µ–º, —â–æ –¥–∞—Ä—É—î –Ω–µ–∑–µ–º–Ω—É –ª–µ–≥–∫—ñ—Å—Ç—å, –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è —Ç–∞ —Å—è–π–≤–æ, —Å—Ç–≤–æ—Ä—é—é—á–∏ –≤—ñ–¥—á—É—Ç—Ç—è —á–∏—Å—Ç–æ—Ç–∏ –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è!",
        "image": "https://i.ibb.co/0yJxwb5b/photo-2025-04-15-15-12-18.jpg"
    },
    "20": {
        "name": "20. Orchid Dream üå∏",
        "description": "‚ú® **Orchid Dream** ‚Äì –Ω–∞—Å–∏—á–µ–Ω–∏–π –∫—Ä–µ–º –∑ –¥–µ–ª—ñ–∫–∞—Ç–Ω–∏–º –∞—Ä–æ–º–∞—Ç–æ–º –æ—Ä—Ö—ñ–¥–µ—ó –¥–ª—è –Ω—ñ–∂–Ω–æ–≥–æ —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–≥–ª—è–¥—É!",
        "image": "https://i.ibb.co/qvTCHVV/photo-2025-04-15-15-12-17.jpg"
    },
    "21": {
        "name": "21. Serene Touch üåπ",
        "description": "üíñ **Serene Touch** ‚Äì –ª–æ—Å—å–π–æ–Ω, —â–æ –¥–∞—Ä—É—î —Å–ø–æ–∫—ñ–π —Ç–∞ —Å–≤—ñ–∂—ñ—Å—Ç—å, –∑–±–∞–≥–∞—á—É—é—á–∏ —à–∫—ñ—Ä—É –≤—ñ—Ç–∞–º—ñ–Ω–∞–º–∏ —Ç–∞ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è–º!",
        "image": "https://i.ibb.co/nMb7BfJb/photo-2025-04-15-15-12-16-2.jpg"
    },
    "22": {
        "name": "22. Mystical Silk ‚ú®",
        "description": "üåü **Mystical Silk** ‚Äì –∫—Ä–µ–º –¥–ª—è –≤–∏—Ç–æ–Ω—á–µ–Ω–æ—ó —à–∫—ñ—Ä–∏, —â–æ –¥–∞—Ä—É—î —Ä–æ–∑–∫—ñ—à–Ω—É –≥–ª–∞–¥–∫—ñ—Å—Ç—å —Ç–∞ –Ω–µ–∑–∞–±—É—Ç–Ω—ñ–π –∞—Ä–æ–º–∞—Ç!",
        "image": "https://i.ibb.co/bMcQSsLv/photo-2025-04-15-15-12-16.jpg"
    },
    "23": {
        "name": "23. Pure Seductionüí´",
        "description": "üíé **Pure Seduction** ‚Äì –ú—ñ—Å—Ç –¥–ª—è —Ç—ñ–ª–∞ (250 –º–ª) —Ç–∞ –∂–∏–≤–∏–ª—å–Ω–∏–π –ª–æ—Å—å–π–æ–Ω –¥–ª—è —Ç—ñ–ª–∞ (236 –º–ª). –ü—ñ—Å–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –Ω–∞ —Ç—ñ–ª—ñ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –Ω—ñ–∂–Ω–∏–π –ø—Ä–∏—î–º–Ω–∏–π –∞—Ä–æ–º–∞—Çüå∏. –î–±–∞–π–ª–∏–≤–æ –¥–æ–≥–ª—è–¥–∞—é—Ç—å –∑–∞ —à–∫—ñ—Ä–æ—é - —à–≤–∏–¥–∫–µ –≤–±–∏—Ä–∞–Ω–Ω—è, —ñ–Ω—Ç–µ–Ω—Å–∏–≤–Ω–µ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è —Ç–∞ –∂–∏–≤–ª–µ–Ω–Ω—è —à–∫—ñ—Ä–∏ 24 –≥–æ–¥–∏–Ω–∏.

–ú—ñ—Å—Ç–∏—Ç—å –µ–∫—Å—Ç—Ä–∞–∫—Ç –∞–ª–æ–µ –≤–µ—Ä–∞. –ü—Ä–æ—Å—Ç–æ –Ω–∞–Ω–µ—Å—ñ—Ç—å –π–æ–≥–æ –Ω–∞ —à–∫—ñ—Ä—É —ñ –≤—ñ–¥—á—É–π—Ç–µ —Ü–µ–π —Å–µ–∫—Å—É–∞–ª—å–Ω–∏–π –¥–æ—Ç–∏–∫ –∞—Ä–æ–º–∞—Ç—É!

–ù–æ—Ç–∏ –∞—Ä–æ–º–∞—Ç—É: –ø–æ—î–¥–Ω—É—î –±—ñ–ª—É —Ñ—Ä–µ–∑—ñ—é —Ç–∞ —Å–ª–∏–≤—É.

–¢–∏–ø –∞—Ä–æ–º–∞—Ç—É: —Ñ—Ä—É–∫—Ç–æ–≤–æ-–∫–≤—ñ—Ç–∫–æ–≤–∏–π.",
        "image": "https://i.ibb.co/N2rqMnHr/photo-2025-04-15-15-12-15.jpg"
    },
    "24": {
        "name": "24. Velvet Enigma üåô",
        "description": "üåπ **Velvet Enigma** ‚Äì —Ä–æ–∑–∫—ñ—à–Ω–∏–π –∫—Ä–µ–º, —â–æ –æ–∫—É—Ç—É—î —à–∫—ñ—Ä—É —Ç–∞—î–º–Ω–∏—á–æ—é –Ω—ñ–∂–Ω—ñ—Å—Ç—é, –¥–∞—Ä—É—é—á–∏ –Ω–µ–ø–æ–≤—Ç–æ—Ä–Ω–µ —Å—è–π–≤–æ!",
        "image": "https://i.ibb.co/YFFmL2WZ/photo-2025-04-15-15-12-14.jpg"
    },
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ–Ω—é —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
def get_product_menu(page: int) -> InlineKeyboardMarkup:
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–ª—é—á—É (–Ω–æ–º–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞)
    sorted_products = sorted(products.items(), key=lambda x: int(x[0]))
    per_page = 4  # 4 —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    total_pages = (len(sorted_products) + per_page - 1) // per_page
    start = (page - 1) * per_page
    end = start + per_page
    current_products = sorted_products[start:end]
    
    keyboard = []
    for prod_id, prod in current_products:
        btn = InlineKeyboardButton(text=prod["name"], callback_data=f"PRODUCT_{prod_id}")
        keyboard.append([btn])  # –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ä—è–¥—É

    # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"PAGE_{page - 1}"))
    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton("–î–∞–ª—ñ ‚ñ∂Ô∏è", callback_data=f"PAGE_{page + 1}"))
    if nav_buttons:
        keyboard.append(nav_buttons)
        
    return InlineKeyboardMarkup(keyboard)

# ------------------------- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ConversationHandler -------------------------

def start_command(update: Update, context: CallbackContext) -> int:
    """
    –í—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–∞—Ä—Ç–∏–Ω–∫–æ–π, –∞ —Ç–∞–∫–∂–µ –º–µ–Ω—é —Ç–æ–≤–∞—Ä–æ–≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    """
    chat_id = update.effective_chat.id
    welcome_text = (
        "üåü –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Victoria's Secret! üåü\n\n"
        "–í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–ª—è —Å–µ–±–µ —Ä–æ–∑–∫—ñ—à–Ω–∏–π –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏—Ö –ø–∞—Ä—Ñ—É–º–æ–≤–∞–Ω–∏—Ö –ª–æ—Å—å–π–æ–Ω—ñ–≤ —Ç–∞ –∫—Ä–µ–º—ñ–≤ –∑ –°–®–ê. "
        "–ù–∞—à—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –≤–∞–º –≤—ñ–¥—á—É—Ç–∏ —Å–ø—Ä–∞–≤–∂–Ω—é –∫—Ä–∞—Å—É —ñ –¥–æ–≥–ª—è–¥, —è–∫–∏–π –≤–∏ –∑–∞—Å–ª—É–≥–æ–≤—É—î—Ç–µ!\n\n"
        "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —ñ–¥–µ–∞–ª—å–Ω–∏–π —Ç–æ–≤–∞—Ä –Ω–∏–∂—á–µ:"
    )
    context.user_data["current_page"] = 1
    welcome_image = "https://i.ibb.co/cS9WCwrJ/photo-2025-04-14-01-23-29.jpg"
    context.bot.send_photo(
        chat_id=chat_id,
        photo=welcome_image,
        caption=welcome_text,
        reply_markup=get_product_menu(1)
    )
    return CHOOSING_PRODUCT

def page_handler(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ (PAGE_<–Ω–æ–º–µ—Ä>) –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é —Ç–æ–≤–∞—Ä–æ–≤.
    """
    query = update.callback_query
    query.answer()
    data = query.data  # –§–æ—Ä–º–∞—Ç "PAGE_<–Ω–æ–º–µ—Ä>"
    page = int(data.split("_")[1])
    context.user_data["current_page"] = page
    try:
        query.edit_message_reply_markup(reply_markup=get_product_menu(page))
    except Exception:
        query.message.reply_text("–û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä:", reply_markup=get_product_menu(page))
    return CHOOSING_PRODUCT

def back_to_menu_handler(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" –≤ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏ –º–µ–Ω—é —Ç–æ–≤–∞—Ä–æ–≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    """
    query = update.callback_query
    query.answer()
    page = context.user_data.get("current_page", 1)
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–æ—á–∫–æ–π —Ç–æ–≤–∞—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–Ω–æ–≤–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    try:
        query.message.delete()
    except Exception:
        pass
    welcome_text = (
        "üåü –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Victoria's Secret! üåü\n\n"
        "–í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–ª—è —Å–µ–±–µ —Ä–æ–∑–∫—ñ—à–Ω–∏–π –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏—Ö –ø–∞—Ä—Ñ—É–º–æ–≤–∞–Ω–∏—Ö –ª–æ—Å—å–π–æ–Ω—ñ–≤ —Ç–∞ –∫—Ä–µ–º—ñ–≤ –∑ –°–®–ê. "
        "–ù–∞—à—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –≤–∞–º –≤—ñ–¥—á—É—Ç–∏ —Å–ø—Ä–∞–≤–∂–Ω—é –∫—Ä–∞—Å—É —ñ –¥–æ–≥–ª—è–¥!\n\n"
        "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —ñ–¥–µ–∞–ª—å–Ω–∏–π —Ç–æ–≤–∞—Ä –Ω–∏–∂—á–µ:"
    )
    welcome_image = "https://i.ibb.co/cS9WCwrJ/photo-2025-04-14-01-23-29.jpg"
    context.bot.send_photo(
        chat_id=query.message.chat_id,
        photo=welcome_image,
        caption=welcome_text,
        reply_markup=get_product_menu(page)
    )
    return CHOOSING_PRODUCT

def select_product(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞ (callback data "PRODUCT_<id>") –∏ –≤—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ó–∞–º–æ–≤–∏—Ç–∏ üõç" –∏ "‚¨ÖÔ∏è –ù–∞–∑–∞–¥".
    """
    query = update.callback_query
    query.answer()
    data = query.data
    if data.startswith("PRODUCT_"):
        prod_id = data.split("_")[1]
        if prod_id not in products:
            query.edit_message_text("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            return CHOOSING_PRODUCT
        context.user_data["selected_product_id"] = prod_id
        product = products[prod_id]
        caption_text = (
            f"üõç **{product['name']}**\n\n"
            f"{product['description']}\n\n"
            "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ó–∞–º–æ–≤–∏—Ç–∏ üõç¬ª, —â–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!"
        )
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: "–ó–∞–º–æ–≤–∏—Ç–∏ üõç" –∏ "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
        keyboard = [[
            InlineKeyboardButton("–ó–∞–º–æ–≤–∏—Ç–∏ üõç", callback_data=f"ORDER_{prod_id}"),
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="BACK_TO_MENU")
        ]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        chat_id = query.message.chat_id
        context.bot.send_photo(
            chat_id=chat_id,
            photo=product["image"],
            caption=caption_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
        return CHOOSING_PRODUCT
    else:
        query.edit_message_text("–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è.")
        return CHOOSING_PRODUCT

def order_product(update: Update, context: CallbackContext) -> int:
    """
    –ü—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–æ–≤–∞—Ä–∞ "–ó–∞–º–æ–≤–∏—Ç–∏ üõç" –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∏–º—è.
    """
    query = update.callback_query
    query.answer()
    data = query.data
    if data.startswith("ORDER_"):
        prod_id = data.split("_")[1]
        context.user_data["selected_product_id"] = prod_id
        try:
            query.edit_message_reply_markup(reply_markup=None)
        except Exception:
            pass
        phone_request = (
            "üì± –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à **–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É** —Ç–∞ **—ñ–º'—è**.\n\n"
            "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: `+380 99 123 45 67, –û–ª–µ–Ω–∞`"
        )
        context.bot.send_message(
            chat_id=query.message.chat_id,
            text=phone_request,
            parse_mode="Markdown"
        )
        return WAITING_PHONE_NAME
    else:
        query.edit_message_text("–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è.")
        return CHOOSING_PRODUCT

def get_phone_name(update: Update, context: CallbackContext) -> int:
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∏–º—è, –∑–∞—Ç–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏.
    """
    user_input = update.message.text.strip()
    context.user_data["phone_name"] = user_input

    address_request = (
        "üè§ –í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç, –æ–±–ª–∞—Å—Ç—å, –Ω–æ–º–µ—Ä –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏ –∞–±–æ –£–∫—Ä–ø–æ—à—Ç–∏.\n"
        "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –ö–∏—ó–≤, –ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å, –ù–æ–≤–∞ –ü–æ—à—Ç–∞, –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ42"
    )
    update.message.reply_text(address_request, parse_mode="Markdown")
    return WAITING_ADDRESS

def get_address(update: Update, context: CallbackContext) -> int:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞.
    """
    user_input = update.message.text.strip()
    context.user_data["address"] = user_input

    prod_id = context.user_data.get("selected_product_id")
    product = products.get(prod_id)
    if not product:
        update.message.reply_text("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –∑ –ø—Ä–æ–¥—É–∫—Ç–æ–º. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.")
        return ConversationHandler.END

    phone_name = context.user_data.get("phone_name", "")
    address = context.user_data.get("address", "")

    summary_text = (
        f"üõç **{product['name']}**\n\n"
        f"{product['description']}\n\n"
        "**–í–∞—à—ñ –¥–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è:**\n"
        f"‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω —ñ —ñ–º'—è: {phone_name}\n"
        f"‚Ä¢ –ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {address}\n\n"
        "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—ñ –¥–∞–Ω—ñ. –Ø–∫—â–æ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äì –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ¬ª. "
        "–Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå¬ª."
    )
    keyboard = [[
        InlineKeyboardButton("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ", callback_data="CONFIRM_ORDER"),
        InlineKeyboardButton("–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå", callback_data="CANCEL_ORDER")
    ]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_photo(
        photo=product["image"],
        caption=summary_text,
        parse_mode="Markdown",
        reply_markup=reply_markup
    )
    return CONFIRM_ORDER

def confirm_order(update: Update, context: CallbackContext) -> int:
    """
    –ü—Ä–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É (—Å —Ñ–æ—Ç–æ)
    —ñ –ø–æ–≤—ñ–¥–æ–º–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """
    query = update.callback_query
    query.answer()
    user_data = context.user_data
    prod_id = user_data.get("selected_product_id")
    product = products.get(prod_id, {})
    phone_name = user_data.get("phone_name", "")
    address = user_data.get("address", "")

    user = update.effective_user
    full_name = user.full_name
    username = f"@{user.username}" if user.username else ""

    order_msg = (
        f"üõí **–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!**\n\n"
        f"**–¢–æ–≤–∞—Ä:** {product.get('name', '‚Äî')}\n"
        f"**–¢–µ–ª–µ—Ñ–æ–Ω —ñ —ñ–º'—è –ø–æ–∫—É–ø—Ü—è:** {phone_name}\n"
        f"**–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:** {address}\n\n"
        f"**–ü–æ–∫—É–ø–µ—Ü—å:** {full_name} {username}\n"
        f"ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user.id}\n"
    )
    try:
        context.bot.send_photo(
            chat_id=OWNER_ID,
            photo=product.get("image"),
            caption=order_msg,
            parse_mode="Markdown"
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")
    try:
        query.edit_message_caption(
            caption="‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –æ–±—Ä–æ–±—Ü—ñ. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –¥–∑–≤—ñ–Ω–æ–∫.",
            parse_mode="Markdown",
            reply_markup=None
        )
    except Exception:
        context.bot.send_message(
            chat_id=query.message.chat_id,
            text="‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –æ–±—Ä–æ–±—Ü—ñ. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –¥–∑–≤—ñ–Ω–æ–∫."
        )
    context.user_data.clear()
    return ConversationHandler.END

def cancel_order(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå".
    """
    query = update.callback_query
    query.answer()
    try:
        query.edit_message_caption(
            caption="‚ùå –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.",
            reply_markup=None
        )
    except Exception:
        context.bot.send_message(
            chat_id=query.message.chat_id,
            text="‚ùå –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ."
        )
    context.user_data.clear()
    return ConversationHandler.END

def cancel_command(update: Update, context: CallbackContext) -> int:
    """
    –ö–æ–º–∞–Ω–¥–∞ /cancel –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É.
    """
    update.message.reply_text("‚ùå –í–∏ —Å–∫–∞—Å—É–≤–∞–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.", reply_markup=ReplyKeyboardRemove())
    context.user_data.clear()
    return ConversationHandler.END

# ------------------------- –ê–¥–º—ñ–Ω-–∫–æ–º–∞–Ω–¥–∏ -------------------------

def admin_help(update: Update, context: CallbackContext):
    user = update.effective_user
    if user.id != OWNER_ID:
        update.message.reply_text("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤.")
        return
    text = (
        "–ê–¥–º—ñ–Ω-–∫–æ–º–∞–Ω–¥–∏:\n"
        "/help ‚Äì –ø–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –º–µ–Ω—é.\n"
        "/send_to_channel <—Ç–µ–∫—Å—Ç> ‚Äì –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª.\n"
        "/cancel ‚Äì —Å–∫–∞—Å—É–≤–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π –¥—ñ–∞–ª–æ–≥ (–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á).\n"
    )
    update.message.reply_text(text)

def send_to_channel(update: Update, context: CallbackContext):
    user = update.effective_user
    if user.id != OWNER_ID:
        update.message.reply_text("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤.")
        return
    if not context.args:
        update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏ /send_to_channel")
        return
    message_text = " ".join(context.args)
    button = InlineKeyboardButton("–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è ‚û°Ô∏è", url="https://t.me/YOUR_BOT_USERNAME")
    markup = InlineKeyboardMarkup([[button]])
    try:
        context.bot.send_message(chat_id=CHANNEL_ID, text=message_text, reply_markup=markup)
        update.message.reply_text("üì¢ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–µ –≤ –∫–∞–Ω–∞–ª!")
    except Exception as e:
        logger.error(e)
        update.message.reply_text("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª.")

# ------------------------- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ -------------------------

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start_command)],
        states={
            CHOOSING_PRODUCT: [
                CallbackQueryHandler(select_product, pattern=r"^PRODUCT_\d+$"),
                CallbackQueryHandler(order_product, pattern=r"^ORDER_\d+$"),
                CallbackQueryHandler(page_handler, pattern=r"^PAGE_\d+$"),
                CallbackQueryHandler(back_to_menu_handler, pattern="^BACK_TO_MENU$")
            ],
            WAITING_PHONE_NAME: [
                MessageHandler(Filters.text & ~Filters.command, get_phone_name)
            ],
            WAITING_ADDRESS: [
                MessageHandler(Filters.text & ~Filters.command, get_address)
            ],
            CONFIRM_ORDER: [
                CallbackQueryHandler(confirm_order, pattern="^CONFIRM_ORDER$"),
                CallbackQueryHandler(cancel_order, pattern="^CANCEL_ORDER$")
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel_command)],
        allow_reentry=True
    )
    dp.add_handler(conv_handler)
    dp.add_handler(CommandHandler("help", admin_help))
    dp.add_handler(CommandHandler("send_to_channel", send_to_channel, pass_args=True))

    updater.start_polling()
    logger.info("Bot started successfully!")
    updater.idle()

if __name__ == "__main__":
    main()
